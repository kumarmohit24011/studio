
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check for admin privileges from custom claims
    function isAdmin() {
      // The `isAdmin` flag is set on the user's token via a backend process
      // which is more secure than checking Firestore directly from rules.
      // This is a standard and secure pattern.
      return request.auth != null && request.auth.token.isAdmin == true;
    }

    // --- Public Read, Admin Write Rules ---
    
    // Products: All users can read, only admins can write.
    match /products/{allPaths=**} {
      allow read;
      allow write: if isAdmin();
    }
    
    // Categories: All users can read, only admins can write.
    match /categories/{allPaths=**} {
      allow read;
      allow write: if isAdmin();
    }

    // Hero Images: All users can read, only admins can write.
    match /hero-images/{allPaths=**} {
      allow read;
      allow write: if isAdmin();
    }
    
    // Content Images (for promotions): All users can read, only admins can write.
    match /content-images/{allPaths=**} {
      allow read;
      allow write: if isAdmin();
    }

    // --- Default Deny ---
    // Deny all other read/write operations by default for security.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
