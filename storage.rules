rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/(default)/documents/users/$(userId)) &&
             get(/databases/(default)/documents/users/$(userId)).data.isAdmin == true;
    }
  
    // Default deny all reads and writes
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Allow public read for product images
    match /products/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Allow public read for hero images
    match /hero-images/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Allow public read for category images
    match /categories/{imageId} {
        allow read: if true;
        allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Allow public read for promotional content images
    match /content-images/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
