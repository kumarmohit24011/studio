rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Products collection - public read, admin write
    match /products/{productId} {
      // Anyone can read published products
      allow read: if true;
      // Only admins can write to products
      allow write: if isAdmin();
    }

    // Categories collection - public read, admin write
    match /categories/{categoryId} {
      // Anyone can read categories
      allow read: if true;
      // Only admins can write to categories
      allow write: if isAdmin();
    }

    // Site content collection - public read, admin write
    match /siteContent/{contentId} {
      // Anyone can read site content
      allow read: if true;
      // Only admins can write to site content
      allow write: if isAdmin();
    }

    // Users collection - user can manage their own profile, admins can read all
    match /users/{userId} {
      // Users can read and write their own profile
      allow read, write: if isOwner(userId);
      // Admins can read any user profile (needed for admin checks)
      allow read: if isAdmin();
      // Admins can write to any user profile (for user management)
      allow write: if isAdmin();
    }

    // Orders collection - users can create/read their own, admins manage all
    match /orders/{orderId} {
      // Users can create orders
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      // Users can read their own orders
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      // Users can update their own orders (for status changes like cancellation)
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Admins can read and write all orders
      allow read, write: if isAdmin();
    }

    // Coupons collection - public read, admin write
    match /coupons/{couponId} {
      // Anyone can read coupons (for validation)
      allow read: if true;
      // Only admins can manage coupons
      allow write: if isAdmin();
    }

    // Newsletter subscribers - anyone can subscribe, admins manage
    match /subscribers/{subscriberId} {
      // Anyone can create a subscription
      allow create: if true;
      // Only admins can read, update, or delete subscriptions
      allow read, update, delete: if isAdmin();
    }

    // Cart collection - users manage their own cart
    match /carts/{userId} {
      // Users can manage their own cart
      allow read, write: if isOwner(userId);
      // Admins can read carts for analytics/support
      allow read: if isAdmin();
    }

    // Wishlist collection - users manage their own wishlist
    match /wishlists/{userId} {
      // Users can manage their own wishlist
      allow read, write: if isOwner(userId);
      // Admins can read wishlists for analytics
      allow read: if isAdmin();
    }

    // User addresses collection - users manage their own addresses
    match /addresses/{addressId} {
      // Users can manage addresses where they are the owner
      allow read, write: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Allow creation if the user is setting their own userId
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // Admins can read addresses for order fulfillment
      allow read: if isAdmin();
    }

    // Reviews collection - users can create/edit own, public read
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;
      // Users can create reviews
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // Users can update their own reviews
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Admins can manage all reviews
      allow read, write: if isAdmin();
    }

    // Analytics collection - admin only
    match /analytics/{analyticsId} {
      allow read, write: if isAdmin();
    }

    // Payment records - admin only for security
    match /payments/{paymentId} {
      allow read, write: if isAdmin();
      // Users can read their own payment records
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Inventory tracking - admin only
    match /inventory/{inventoryId} {
      allow read, write: if isAdmin();
    }

    // Admin logs - admin only
    match /admin_logs/{logId} {
      allow read, write: if isAdmin();
    }

    // Default deny rule (fallback for any other collections)
    match /{document=**} {
      allow read, write: if false;
    }
  }
}