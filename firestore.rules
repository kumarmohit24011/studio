
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Check if the user is an admin by looking at their user document
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(userId) {
        return isAuth() && request.auth.uid == userId;
    }

    // Products can be read by anyone, but only modified by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories can be read by anyone, but only modified by admins
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Coupons can only be accessed by admins
    match /coupons/{couponId} {
      allow read, write: if isAdmin();
    }

    // Settings can be read by anyone, but only written to by admins
    match /settings/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Users collection can be listed by admins.
    // Individual users can only manage their own data.
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    match /users/{wildcard=**} {
      allow list: if isAdmin();
    }
    
    // Orders can be created by any authenticated user.
    // Users can only read their own orders.
    // Admins can read all orders.
    match /orders/{orderId} {
      allow create: if isAuth();
      allow read, update, delete: if isAdmin() || (isAuth() && resource.data.userId == request.auth.uid);
    }
  }
}
