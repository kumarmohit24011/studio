
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserProfileOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function isUserAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /users/{userId} {
      allow read, write: if isUserProfileOwner(userId);
      allow list: if isUserAdmin();
    }
    
    match /products/{productId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    
    match /coupons/{couponId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }

    match /orders/{orderId} {
      // Authenticated users can read their own orders. Admins can read all orders.
      allow read: if (isUserAuthenticated() && resource.data.userId == request.auth.uid) || isUserAdmin();
      // Any authenticated user can create an order.
      allow create: if isUserAuthenticated();
      // Only admins can update an order's status.
      allow update: if isUserAdmin();
      // Nobody can delete orders for data integrity.
      allow delete: if false;
    }

    match /settings/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
  }
}
