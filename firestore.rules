
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // USER PROFILES
    // Users can read their own profile.
    // Users can create their own profile upon signup.
    // Users can update their own name and phone number.
    // Admins can read and write any user profile.
    match /users/{userId} {
      allow read, update: if isAuth() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuth();
    }

    // PRODUCTS
    // Anyone can read products.
    // Only admins can create, update, or delete products.
    match /products/{productId} {
      allow read: if resource == null || resource.data.isPublished == true || isAdmin();
      allow create: if isAdmin()
        && request.data.keys().hasAll(['name', 'description', 'price', 'category', 'createdAt', 'isPublished'])
        && request.data.name is string && request.data.name.size() > 0
        && request.data.description is string
        && request.data.price is number && request.data.price > 0
        && request.data.category is string
        && request.data.createdAt == request.time
        && request.data.isPublished is bool;
      allow update, delete: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ORDERS
    // Users can read their own orders.
    // Admins can read all orders.
    // Only server-side logic can create orders.
    // Admins can update order status.
    match /orders/{orderId} {
      allow read: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
      allow list: if isAdmin();
      allow create: if isAuth(); // Further validation in server-side logic
      allow update: if isAdmin();
    }
    
    // COUPONS
    // Authenticated users can read/query coupons (to apply them at checkout).
    // Only admins can write coupons.
    match /coupons/{couponId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    // Orders should only be accessible by the user who created them or by an admin.
    match /orders/{orderId} {
      // User can create their own order.
      allow create: if isOwner(request.resource.data.userId);
      // User can read their own orders. Admins can read any order.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Only admins can update orders (e.g., change status).
      allow update: if isAdmin();
      // No one should delete orders for data integrity.
      allow delete: if false;
    }
  }
}
