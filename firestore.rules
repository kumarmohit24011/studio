rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin.
    // This is used for write/update/delete operations initiated from the client.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Products and categories are public-readable.
    // Only admins can write/delete them.
    match /products/{productId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    // Site content (hero, promotions) can only be read and written by admins.
    match /siteContent/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Coupons can only be read and written by admins.
    match /coupons/{couponId} {
        allow read, write: if isAdmin();
    }

    // Users can read/write their own profile.
    // Admins can read any user profile.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to list all users. This is safe because we allow authenticated read.
      allow list: if request.auth != null;
    }

    // Orders can be created by any authenticated user.
    // Users can read their own orders.
    // Admins can read all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAdmin(); // Only admins can update order status
      // Allow admins to list all orders. This is safe because we allow authenticated read.
      allow list: if request.auth != null;
    }
  }
}