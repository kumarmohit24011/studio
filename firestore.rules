
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAuthenticated() {
      return request.auth != null;
    }
    
    // PUBLIC COLLECTIONS: Anyone can read these.
    match /products/{productId} {
      allow read: if true;
      // Allow writes only by authenticated users (for admin panel & order transaction)
      allow write: if isAuthenticated(); 
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAuthenticated(); // Admin can manage
    }
    
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAuthenticated(); // Admin can manage
    }
    
    // SECURE USER DATA
    match /users/{userId} {
      // Only the authenticated user can read or write to their own document.
      allow read, write: if isOwner(userId);
    }
    
    // SECURE ORDERS
    match /orders/{orderId} {
        // Users can create orders for themselves. The code ensures userId is correct.
        allow create: if isAuthenticated();
        // Users can only read their own orders. Admin can read all.
        allow read: if isOwner(resource.data.userId); 
        // Only allow admins to update orders (e.g., change status)
        allow update: if isAuthenticated();
        allow delete: if false; // Orders should not be deleted
    }

    // SECURE COUPONS (Admin only)
    match /coupons/{couponId} {
      // Anyone can read to verify, but only admin can write.
      allow read: if true; 
      allow write: if isAuthenticated();
    }
    
    // AUDIT LOGS (Write-only for server-side actions by authenticated users)
    match /auditLogs/{logId} {
      allow read, update, delete: if false; // Nobody can read/change logs from client
      allow create: if isAuthenticated();
    }
  }
}
