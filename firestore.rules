rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Check if the user is authenticated
    function isAuth() {
      return request.auth != null;
    }

    // Check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Check if the user is an admin.
    // This relies on the user being able to read their own document.
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Products: Public can read, only admins can write.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories: Public can read, only admins can write.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: Users can manage their own profile, admins can read any profile.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuth(); // Allow creation for new sign-ups
      allow update: if isOwner(userId); // Users can only update their own profile
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Orders: Users can create/read their own, admins can read all and update status.
    match /orders/{orderId} {
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow read: if (isAuth() && resource.data.userId == request.auth.uid) || isAdmin();
      allow update: if isAdmin(); // Only admins can update order status
      allow delete: if false; // Orders should not be deleted.
    }

    // Coupons: Read-only for authenticated users, full access for admins.
    match /coupons/{couponId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    // Site Content (Hero, Promos, etc.): Public read, admin-only write.
    match /siteContent/{contentId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}