
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin status
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users: Can read/write their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // Prevent users from making themselves admins or changing key fields.
      allow update: if request.auth.uid == userId 
          && !('isAdmin' in request.resource.data)
          && request.resource.data.uid == resource.data.uid
          && request.resource.data.email == resource.data.email;
    }

    // Products & Categories: Publicly readable, admin write-only
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Site Content: Publicly readable, admin write-only
    match /siteContent/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Orders: User can create their own and read their own. Admin can read/write all.
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Coupons: Admin only
    match /coupons/{couponId} {
        allow read, write: if isAdmin();
    }
  }
}
