rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserOwner(userId) {
      return request.auth.uid == userId;
    }

    function isUserAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read, update: if isUserOwner(userId) || isUserAdmin(request.auth.uid);
      allow create: if isUserAuthenticated();
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isUserAdmin(request.auth.uid);
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isUserAdmin(request.auth.uid);
    }
    
    match /coupons/{couponId} {
        allow read: if true;
        allow create, update, delete: if isUserAdmin(request.auth.uid);
    }

    match /settings/{docId} {
        allow read: if true;
        allow create, update, delete: if isUserAdmin(request.auth.uid);
    }

    match /orders/{orderId} {
      allow read: if isUserOwner(resource.data.userId) || isUserAdmin(request.auth.uid);
      allow create: if isUserAuthenticated(); // Note: Order creation is handled server-side
    }
  }
}
