rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Check if the authenticated user is an admin by looking at their profile
    function isAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Default to denying all access. Specific rules below will grant permissions.
    match /{document=**} {
      allow read, write: if false;
    }

    // Products and Categories are publicly readable. Only admins can write.
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Coupons are publicly readable. Only admins can write.
    match /coupons/{couponId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Site content is publicly readable. Only admins can write.
    match /siteContent/global {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Users can read/write their own document. Admins can read any.
    // Making collection readable for admin dashboard to list customers.
    match /users/{userId} {
      allow read: if true;
      allow create: if isUserAuthenticated();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Orders can be created by any authenticated user.
    // Users can only read their own orders.
    // Admins can read all orders.
    match /orders/{orderId} {
        allow create: if isUserAuthenticated();
        allow read: if true;
        allow update: if isAdmin(); // Only admins can change order status
        allow delete: if false; // Disallow deleting orders for data integrity
    }
  }
}