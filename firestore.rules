rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Products can be read by anyone, but only written by authenticated users.
    // This is required for both the admin panel and for the checkout transaction to update stock.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Categories, Coupons, and Settings can be read by anyone, but only written by an admin.
    match /(categories|coupons|settings)/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users can only read and write to their own data document.
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Orders can be created by any authenticated user for themselves.
    // Users can only read their own orders. Admins can read/write any order.
    match /orders/{orderId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
    }
  }
}
