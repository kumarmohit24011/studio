rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Public read, authenticated write
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Categories: Public read, authenticated write
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Users: Can only read/write their own data
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Orders: Users can create their own orders and read them.
    // Admins (any authenticated user for now) can read/update all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && (resource.data.userId == request.auth.uid || exists(/databases/$(database)/documents/users/$(request.auth.uid)));
    }
    
    // Coupons: Authenticated users can write. Anyone can read (for client-side validation)
    match /coupons/{couponId} {
        allow read: if true;
        allow write: if request.auth != null;
    }

    // Settings: Public read, authenticated write
    match /settings/homepage {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    // Audit Logs: Authenticated users can create. No one can read/update/delete from client.
    match /auditLogs/{logId} {
      allow read, update, delete: if false;
      allow create: if request.auth != null;
    }
  }
}