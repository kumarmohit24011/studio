rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is an admin by reading their own user document.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Publicly readable collections
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /siteContent/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // User-specific data
    match /users/{userId} {
      // Users can read/write their own profile, cart, wishlist, etc.
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admins can list all users for the customer management page.
      allow list: if isAdmin();
    }

    // Orders
    match /orders/{orderId} {
      // Users can create their own orders.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Users can read their own orders. Admins can read any order.
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      // Admins can update any order (e.g., change status).
      allow update: if isAdmin();
      // Admins can list all orders. This is the key fix.
      allow list: if isAdmin();
    }

    // Coupons
     match /coupons/{couponId} {
        // Any authenticated user can read a specific coupon (to verify it).
        allow read: if request.auth != null;
        // Only admins can list all coupons or modify them.
        allow list, write, update, delete: if isAdmin();
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
