
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Public read-only collections
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Site content is admin-only, but readable by all for settings like shipping
    match /siteContent/global {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Coupons can be read by any authenticated user (to verify them) but only managed by admins
    match /coupons/{couponId} {
      allow get: if request.auth != null;
      allow list, write: if isAdmin();
    }

    // Users can manage their own profiles
    // Admins can read any user profile and list all users
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin(); // This was the missing rule
      allow write: if request.auth.uid == userId;
    }

    // Orders can be created and read by owner, but only managed by admins
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow list, update: if isAdmin();
      allow delete: if false; // Orders should not be deleted
    }
  }
}
