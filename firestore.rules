
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an authenticated admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Default deny all access to prevent unsecured collections
    match /{document=**} {
      allow read, write: if false;
    }

    // Products can be read by anyone, but only written by admins.
    match /products/{productId} {
      allow get, list: if resource.data.isPublished == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Categories can be read by anyone, but only written by admins.
    match /categories/{categoryId} {
      allow get, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Coupons can only be read and written by admins.
    match /coupons/{couponId} {
      allow get, list, create, update, delete: if isAdmin();
    }

    // Users can read/write to their own document. Admins can read any user document.
    match /users/{userId} {
      allow get, update: if isOwner(userId);
      allow get, list: if isAdmin();
      // Deny create and delete to prevent users from creating their own profiles
      // or deleting them arbitrarily. This should be handled by server-side logic
      // during sign-up and account deletion processes.
      allow create, delete: if false;
    }

    // Orders can be created by any authenticated user.
    // Users can only read their own orders.
    // Admins can read all orders and update their status.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow get, list: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin(); // Only admins can update order status etc.
      allow delete: if false; // Orders should not be deleted, but archived or cancelled.
    }

    // Site-wide content can be read by anyone, but only managed by admins.
    match /siteContent/global {
      allow get: if true;
      allow create, update: if isAdmin();
      allow delete: if false; // This document should not be deleted.
    }
  }
}
