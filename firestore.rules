rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuth() && (
        (request.auth.token.admin == true)
        ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
      );
    }

    // --- Products: public read, admin writes ---
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- Categories: public read, admin writes ---
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Allow admins to list users, but not customers to list all users
    match /users {
      allow list: if isAdmin();
    }

    // --- Users: creation by auth user only for their own doc; admin read/delete; prevent isAdmin change by regular user ---
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuth() && request.auth.uid == userId;
      allow update: if isOwner(userId) && !('isAdmin' in request.resource.data);
      allow delete: if isAdmin();
    }

    // --- Orders ---
    match /orders/{orderId} {
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow read: if (isAuth() && resource.data.userId == request.auth.uid) || isAdmin();
      allow update: if isAdmin();
      allow delete: if false; // Deletion of orders is disallowed for audit
    }

    // --- Coupons ---
    match /coupons/{couponId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    // --- siteContent (heroSection, global, etc.) ---
    match /siteContent/{contentId} {
      allow read: if true; // public
      allow write: if isAdmin();
    }

    // --- Subscribers: public write for creating their own subscription ---
    match /subscribers/{email} {
      // Anyone can subscribe themselves. They cannot read other subscribers.
      allow create: if true;
      allow read, update, delete, list: if false;
    }
  }
}
